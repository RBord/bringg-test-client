{"version":3,"sources":["services/swapi.js","views/PlanetsPageView/PlanetsPage.module.css","views/PlanetsPageView/PlanetsPage.jsx"],"names":["fetchPeopleById","peopleId","params","a","axios","get","then","res","data","fetchPlanetsById","planetsId","defaults","baseURL","module","exports","PlanetsPage","useState","setPlanetsId","json","setJson","needEncode","setNeedEncode","useEffect","swAPI","error","console","log","message","getPlanetsById","entries","Object","onSubmit","e","preventDefault","target","elements","value","encoding","checked","type","name","placeholder","className","s","input","button","id","htmlFor","map","key","v4"],"mappings":"mNAIO,SAAeA,EAAtB,oC,4CAAO,WAA+BC,EAAUC,GAAzC,SAAAC,EAAA,sEACQC,IACVC,IADU,iBACIJ,GADJ,OACeC,IACzBI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,QAHrB,oF,sBAMA,SAAeC,EAAtB,oC,4CAAO,WAAgCC,EAAWR,GAA3C,SAAAC,EAAA,sEACQC,IACVC,IADU,kBACKK,GADL,OACiBR,IAC3BI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,QAHrB,oF,sBARPJ,IAAMO,SAASC,QAAU,6C,mBCDzBC,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,OAAS,8B,mKCI/C,SAASC,IACpB,MAAkCC,mBAAS,IAA3C,mBAAON,EAAP,KAAkBO,EAAlB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAoCH,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAAI,4CAEV,sBAAAnB,EAAA,sDACI,IACIoB,IAAuBb,EAAWU,GAAYd,KAAKa,GACrD,MAAOK,GACLC,QAAQC,IAAIF,EAAMG,SAJ1B,4CAFU,sBACO,KAAdjB,GADO,mCASVkB,KACF,CAAClB,EAAWU,IAEd,IAAMS,EAAUC,OAAOD,QAAQX,GAE/B,OACI,qCACA,uBAAMa,SAAU,SAAAC,GACZA,EAAEC,iBACFhB,EAAae,EAAEE,OAAOC,SAASzB,UAAU0B,QACC,IAAvCJ,EAAEE,OAAOC,SAASE,SAASC,QAC1BjB,EAAc,kBAEdA,EAAc,KANtB,UASI,uBAAOkB,KAAK,OAAOC,KAAK,YAAYC,YAAY,eAAeC,UAAWC,IAAEC,QAC5E,wBAAQL,KAAK,SAASG,UAAWC,IAAEE,OAAnC,oBAGA,uBAAON,KAAK,WAAWO,GAAG,WAAWN,KAAK,aAC1C,uBAAOO,QAAQ,WAAf,iCAEJ,uBAEC7B,GACG,6BACKW,EAAQmB,KAAI,YAAkB,IAAD,mBAAfC,EAAe,KAAVb,EAAU,KAC1B,OACI,+BAAe,4BAAIa,IAAnB,MAA+Bb,IAAtBc","file":"static/js/5.b2176430.chunk.js","sourcesContent":["import axios from \"axios\"\n\naxios.defaults.baseURL = \"https://bringg-test-server.herokuapp.com/\"\n\nexport async function fetchPeopleById(peopleId, params) {\n  return await axios\n    .get(`people/${peopleId}${params}`)\n    .then((res) => res.data.data)\n}\n\nexport async function fetchPlanetsById(planetsId, params) {\n  return await axios\n    .get(`planets/${planetsId}${params}`)\n    .then((res) => res.data.data)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PlanetsPage_input__2quNB\",\"button\":\"PlanetsPage_button__2ch3I\"};","import {useState, useEffect} from \"react\";\nimport s from './PlanetsPage.module.css'\nimport {v4} from 'uuid'\nimport * as swAPI from '../../services/swapi'\n\nexport default function PlanetsPage(){\n    const [planetsId, setPlanetsId] = useState('')\n    const [json, setJson] = useState({})\n    const [needEncode, setNeedEncode] = useState('')\n\n    useEffect(()=>{\n        if(planetsId === '') return\n        async function getPlanetsById(){\n            try {\n                swAPI.fetchPlanetsById(planetsId, needEncode).then(setJson)\n            } catch (error) {\n                console.log(error.message)\n            }\n        }\n        getPlanetsById()\n    },[planetsId, needEncode])\n\n    const entries = Object.entries(json)\n    \n    return (\n        <>\n        <form onSubmit={e => {\n            e.preventDefault()\n            setPlanetsId(e.target.elements.planetsId.value)\n            if(e.target.elements.encoding.checked === true){\n                setNeedEncode('?encoding=ewot')\n            } else {\n                setNeedEncode('')\n            }\n        }}>\n            <input type='text' name='planetsId' placeholder='Enter number' className={s.input}/>\n            <button type='submit' className={s.button}>\n                Search\n            </button>\n            <input type=\"checkbox\" id='encoding' name='encoding'/>\n            <label htmlFor='encoding'>Encoding to Ewok</label>\n        </form>\n        <hr/>\n\n        {json && (\n            <ul>\n                {entries.map(([key, value]) =>{\n                    return (\n                        <li key={v4()}><b>{key}</b>:  {value}</li>\n                    )\n                })}\n            </ul>)\n        }\n        </>\n    )\n}"],"sourceRoot":""}