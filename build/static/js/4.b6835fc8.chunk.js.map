{"version":3,"sources":["services/swapi.js","views/PeoplePageView/PeoplePage.module.css","views/PeoplePageView/PeoplePage.jsx"],"names":["fetchPeopleById","peopleId","params","a","axios","get","then","res","data","fetchPlanetsById","planetsId","defaults","baseURL","module","exports","PeoplePage","useState","setPeopleId","json","setJson","needEncode","setNeedEncode","useEffect","swAPI","error","console","log","getPeopleById","entries","Object","onSubmit","e","preventDefault","target","elements","value","encoding","checked","type","name","placeholder","className","s","input","button","id","htmlFor","map","k","v4"],"mappings":"mNAIO,SAAeA,EAAtB,oC,4CAAO,WAA+BC,EAAUC,GAAzC,SAAAC,EAAA,sEACQC,IACVC,IADU,iBACIJ,GADJ,OACeC,IACzBI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,QAHrB,oF,sBAMA,SAAeC,EAAtB,oC,4CAAO,WAAgCC,EAAWR,GAA3C,SAAAC,EAAA,sEACQC,IACVC,IADU,kBACKK,GADL,OACiBR,IAC3BI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKA,QAHrB,oF,sBARPJ,IAAMO,SAASC,QAAU,6C,mBCDzBC,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,OAAS,6B,mKCI9C,SAASC,IACpB,MAAgCC,mBAAS,IAAzC,mBAAOf,EAAP,KAAiBgB,EAAjB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAoCH,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WAAI,4CAEV,sBAAAnB,EAAA,sDACI,IACIoB,IAAsBtB,EAAUmB,GAAYd,KAAKa,GAEnD,MAAOK,GACLC,QAAQC,IAAIF,GALpB,4CAFU,sBACM,KAAbvB,GADO,mCAUV0B,KACF,CAAC1B,EAAUmB,IAEb,IAAMQ,EAAUC,OAAOD,QAAQV,GAG/B,OACI,qCACA,uBAAMY,SAAU,SAAAC,GACZA,EAAEC,iBACFf,EAAYc,EAAEE,OAAOC,SAASjC,SAASkC,QACG,IAAvCJ,EAAEE,OAAOC,SAASE,SAASC,QAC1BhB,EAAc,kBAEdA,EAAc,KANtB,UAUI,uBAAOiB,KAAK,OAAOC,KAAK,WAAWC,YAAY,eAAeC,UAAWC,IAAEC,QAC3E,wBAAQL,KAAK,SAASG,UAAWC,IAAEE,OAAnC,oBAGA,uBAAON,KAAK,WAAWO,GAAG,WAAWN,KAAK,aAC1C,uBAAOO,QAAQ,WAAf,iCAEJ,uBAEC5B,GACG,6BACKU,EAAQmB,KAAI,YAAgB,IAAD,mBAAbC,EAAa,KAAVb,EAAU,KAExB,OACI,+BAAe,4BAAIa,IAAnB,KAA4Bb,IAAnBc","file":"static/js/4.b6835fc8.chunk.js","sourcesContent":["import axios from \"axios\"\n\naxios.defaults.baseURL = \"https://bringg-test-server.herokuapp.com/\"\n\nexport async function fetchPeopleById(peopleId, params) {\n  return await axios\n    .get(`people/${peopleId}${params}`)\n    .then((res) => res.data.data)\n}\n\nexport async function fetchPlanetsById(planetsId, params) {\n  return await axios\n    .get(`planets/${planetsId}${params}`)\n    .then((res) => res.data.data)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"PeoplePage_input__1f9_Q\",\"button\":\"PeoplePage_button__uUt3y\"};","import {useState, useEffect} from \"react\";\nimport s from './PeoplePage.module.css'\nimport {v4} from 'uuid'\nimport * as swAPI from '../../services/swapi'\n\nexport default function PeoplePage(){\n    const [peopleId, setPeopleId] = useState('')\n    const [json, setJson] = useState({})\n    const [needEncode, setNeedEncode] = useState('')\n\n    useEffect(()=>{\n        if(peopleId === '') return\n        async function getPeopleById(){\n            try {\n                swAPI.fetchPeopleById(peopleId, needEncode).then(setJson)\n                \n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getPeopleById()\n    },[peopleId, needEncode])\n\n    const entries = Object.entries(json)\n\n\n    return (\n        <>\n        <form onSubmit={e => {\n            e.preventDefault()\n            setPeopleId(e.target.elements.peopleId.value)\n            if(e.target.elements.encoding.checked === true){\n                setNeedEncode('?encoding=ewot')\n            } else {\n                setNeedEncode('')\n            }\n            \n        }}>\n            <input type='text' name='peopleId' placeholder='Enter number' className={s.input}/>\n            <button type='submit' className={s.button}>\n                Search\n            </button>\n            <input type=\"checkbox\" id='encoding' name='encoding'/>\n            <label htmlFor='encoding'>Encoding to Ewok</label>\n        </form>\n        <hr/>\n\n        {json && (\n            <ul>\n                {entries.map(([k, value]) =>{\n                    \n                    return (\n                        <li key={v4()}><b>{k}</b>: {value}</li>\n                    )\n                })}\n            </ul>)\n        }\n        </>\n    )\n}"],"sourceRoot":""}